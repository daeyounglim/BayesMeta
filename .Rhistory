warnings()
curve(f, from = -10, to = 10)
curve(f, from = -10f <- function(x) {
exp(-(2 - exp(-3 * x))^2)
}, to = 10)
f <- function(x) {
exp(-(2 - exp(-3 * x))^2)
}
curve(f, from = -10, to = 10)
curve(f, from = -5, to = 5)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2 - (x^2))
}
integrate(f, lower = -Inf, upper = Inf)
curve(f, from = -5, to = 5)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2 - (x^2/2000))
}
curve(f, from = -5, to = 5)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2) / (1 + x^2)
}
curve(f, from = -5, to = 5)
install.packages("RcppTN")
install.packages("TruncatedNormal")
M <- matrix(rnorm(100*30), 100, 30)
princomp(M)
x <- princomp(M)
x
x <- prcomp(M)
x
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta")
library(tools)
package_native_routine_registration_skeleton(".")
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta/src")
package_native_routine_registration_skeleton(".")
cd ..
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta")
tools::package_native_routine_registration_skeleton(".", "src/init.c", character_only=FALSE)
roxygen2::roxygenise()
install.packages("roxygen2")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
load("C:/Users/dal18007/Desktop/test/t_model_data.RData")
ls()
str(df)
length(df)
df <- df[[1]]
str(df)
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta")
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta/data")
save(df, "NetworkMeta.RData")
save(df, file= "NetworkMeta.RData")
x <- df[,6:10]
x
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::use_data_raw()
usethis::use_data_raw()
usethis::use_data(df)
roxygen2::roxygenise()
roxygen2::roxygenise()
tools::package_native_routine_registration_skeleton(".", "src/init.c", character_only=FALSE)
compileAttributes()
Rcpp::compileAttributes()
roxygen2::roxygenise()
devtools::install_github("daeyounglim/BayesMeta")
setwd("C:/Users/dal18007/Downloads")
install.packages("BayesMeta-master.zip", type="source", repo=NULL)
list.files(pattern="BayesMeta*.tar.gz")
list.files(pattern="BayesMeta*.zip")
list.files
list.files(pattern = "BayesMeta")
list.files(pattern = "BayesMeta*.zip")
list.files(pattern="BayesMeta-master*.zip")
list.files(pattern="BayesMeta-*.zip")
list.files(pattern="BayesMeta-master*.zip")
help(list.files)
list.files(pattern="/(?:BayesMeta\-)(?:\.zip)$/")
list.files(pattern="/(?:BayesMeta-)(?:\.zip)$/")
list.files(pattern="/(?:BayesMeta-)(?:.zip)$/")
list.files(pattern="/(?:BayesMeta\-)(?:\.zip)$/")
list.files()
grep(pattern = "/(?:BayesMeta\-)(?:\.zip)$/", list.files())
help(grep)
regexpr(pattern = "/(?:BayesMeta\-)(?:\.zip)$/", list.files())
regexpr(pattern = "(?:BayesMeta\-)(?:\.zip)$", list.files())
regexpr(pattern = "(?:BayesMeta-)(?:.zip)$", list.files())
grep(pattern = "(?:BayesMeta-)(?:.zip)$", list.files())
grep("BayesMeta-*.zip", list.files())
grep("BayesMeta-.zip", list.files())
grep("BayesMeta-", list.files())
list.files()[32]
grep("BayesMeta-?.zip", list.files())
grep("BayesMeta-master*.zip", list.files())
list.files(pattern="BayesMeta-master.zip")
unzip("BayesMeta-master.zip")
file.rename("BayesMeta-master", "BayesMeta")
shell("R CMD build BayesMeta")
install.packages(list.files(pattern="BayesMeta*.tar.gz"), repos = NULL)
install.packages(list.files(pattern="(?<=BayesMeta)(.*)(?=\.tar\.gz)"), repos = NULL)
regexpr("(?<=BayesMeta)(.*)(?=\.tar\.gz)")
regexpr("(?<=BayesMeta)(.*)(?=\\.tar\\.gz)")
list.files(pattern="(?<=BayesMeta)(.*)(?=\\.tar\\.gz)")
regex
list.files(pattern="(?<=BayesMeta)(.*)(.tar.gz)")
list.files(pattern="(?<=BayesMeta)(.*)(.tar.gz)")
list.files(pattern="(BayesMeta)(.*)(.tar.gz)")
library(BayesMeta)
setwd('C:\Users\dal18007\Dropbox\Box-Cox_Bayesian\real_data')
x0 <- read_csv("data-0415_Pharmacy_Biology_Building-10415x_CW_CHWTON-2019-05-09.csv")
x <- x0 %>% filter(TimeStamp >= ymd_hms("2018-07-01 00:00:00"),
TimeStamp < ymd_hms("2018-08-01 00:00:00"))
y <- x$Reading %>% scale(center=FALSE) %>% drop
n <- length(y)
x1 <- x$TempRead %>% scale %>% drop
x2 <- x$HumidityRead %>% scale %>% drop
x3 <- 1*(hour(x$TimeStamp) %in% c(0:6, 19:23))
xobs <- cbind(1, x1, x2, x3)
zobs <- cbind(1, x1, x2)
uobs <- cbind(1, x1, x2, x3)
fit <- boxcoxar(y, integer(length(y)), mcmc=list(ndiscard=10000, nkeep = 20000),
xobs = xobs, zobs = zobs, uobs = uobs, verbose=TRUE)
setwd('C:/Users/dal18007/Dropbox/Box-Cox_Bayesian/real_data')
x0 <- read_csv("data-0415_Pharmacy_Biology_Building-10415x_CW_CHWTON-2019-05-09.csv")
x <- x0 %>% filter(TimeStamp >= ymd_hms("2018-07-01 00:00:00"),
TimeStamp < ymd_hms("2018-08-01 00:00:00"))
y <- x$Reading %>% scale(center=FALSE) %>% drop
n <- length(y)
x1 <- x$TempRead %>% scale %>% drop
x2 <- x$HumidityRead %>% scale %>% drop
x3 <- 1*(hour(x$TimeStamp) %in% c(0:6, 19:23))
xobs <- cbind(1, x1, x2, x3)
zobs <- cbind(1, x1, x2)
uobs <- cbind(1, x1, x2, x3)
fit <- boxcoxar(y, integer(length(y)), mcmc=list(ndiscard=10000, nkeep = 20000),
xobs = xobs, zobs = zobs, uobs = uobs, verbose=TRUE)
library(lubridate)
library(tidyverse)
x0 <- read_csv("data-0415_Pharmacy_Biology_Building-10415x_CW_CHWTON-2019-05-09.csv")
x <- x0 %>% filter(TimeStamp >= ymd_hms("2018-07-01 00:00:00"),
TimeStamp < ymd_hms("2018-08-01 00:00:00"))
y <- x$Reading %>% scale(center=FALSE) %>% drop
n <- length(y)
x1 <- x$TempRead %>% scale %>% drop
x2 <- x$HumidityRead %>% scale %>% drop
x3 <- 1*(hour(x$TimeStamp) %in% c(0:6, 19:23))
xobs <- cbind(1, x1, x2, x3)
zobs <- cbind(1, x1, x2)
uobs <- cbind(1, x1, x2, x3)
fit <- boxcoxar(y, integer(length(y)), mcmc=list(ndiscard=10000, nkeep = 20000),
xobs = xobs, zobs = zobs, uobs = uobs, verbose=TRUE)
BayesMeta
BayesMeta::load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
library(BayesMeta)
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
setwd('C:/Users/dal18007/Desktop/Rpackages/BayesMeta')
Rcpp::compileAttributes()
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
devtools::document(roclets = c('rd', 'collate', 'namespace'))
pkgbuild::compile_dll()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
help(getLoadedDLLs)
pkgbuild::compile_dll()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
devtools::document(roclets = c('rd', 'collate'))
devtools::session_info()
devtools::document()
roxygenize()
roxygen2::roxygenize()
devtools::document(".")
roxygen2::roxygenise(load = "source")
library(roxygen2)
roxygen2::roxygenise(load = "source")
roxygenise(load = "installed")
roxygenize(".")
help('roxygenize')
pkgbuild::compile_dll()
help(compile_dll)
help(compile_dll)
pkgbuild::compile_dll()
pkgbuild::compile_dll()
devtools::document(roclets = c('rd', 'collate', 'namespace'))
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
devtools::document(".", roclets = c('rd', 'collate', 'namespace'))
BayesMeta::bayesnmr
`BayesNMR`
BayesMeta:::.__NAMESPACE__.
Rcpp::compileAttributes()
devtools::load_all(".")
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
tools::package_native_routine_registration_skeleton(".", "src/init.c", character_only=FALSE)
tools::package_native_routine_registration_skeleton(".", "src/init.c")
tools::package_native_routine_registration_skeleton(".", "src/init.c", character_only=FALSE)
Rcpp::compileAttributes()
Rcpp::compileAttributes()
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
bayesnmr
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
library(BayesMeta)
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
load('C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData')
dff <- df[[1]]
x <- dff[,6:10]
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(dff$y, dff$sd, x, dff$ids, dff$iarm, dff$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000), verbose=TRUE)
rowMeans(fit$mcmc.draws$beta)
setwd("C:/Users/dal18007/Desktop/Rpackages")
save(fit, file="meta_fit.RData")
library(BayesMeta)
devtools::document(())
devtools::document()
setwd("C:/Users/dal18007/Desktop/Rpackages/BayesMeta")
setwd("C:/Users/dal18007/Desktop/Rpackages/BayesMeta")
devtools::document()
library(BayesMeta)
data(df)
head(df)
library(BayesMeta)
data(df)
head(df)
str(df)
groupinfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
fit <- bayesnmr(df$y, df$sd, x, df$ids, df$iarm, df$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000), verbose=TRUE)
x <- df[,6:10]
fit <- bayesnmr(df$y, df$sd, x, df$ids, df$iarm, df$npt, groupinfo, prior = list(c01=1.0e05, c02=4, nu=3), mcmc=list(ndiscard=2500,nskip=1,nkeep=10000), verbose=TRUE)
fit$mcmctime
fit$mcmc.draws$Rho_acceptance
fit$mcmc.draws$phi_acceptance
str(fit$mcmc.draws$phi)
library(BayesMeta)
load("C:/Users/dal18007/Desktop/Rpackages/meta_fit.RData")
dic <- gof(fit, type = "dic")
hpd(fit)
devtools
library(devtools)
install_github("daeyounglim/BayesMeta")
devtools::document()
library(BayesMeta)
load("C:/Users/dal18007/Desktop/Rpackages/meta_fit.RData")
f <- fitted(fit)
f
f$beta
print(f)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
print.lm
help(print.lm)
help(print)
load("C:/Users/dal18007/Desktop/Rpackages/meta_fit.RData")
library(BayesMeta)
print(fit)
help(format)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(reshape2)
help(prettyprint)
library(reshape)
install.packages("reshape")
library(reshape)
help(prettyprint)
print
help(print)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
library(BayesMeta)
print(fit)
help("print.bayesnmr")
library(BayesMeta)
help("print.bayesnmr")
print(fit)
print(fit, HPD=FALSE)
devtools::document()
library(BayesMeta)
devtools::document()
library(BayesMeta)
devtools::document()
library(BayesMeta)
devtools::document()
library(BayesMeta)
library(BayesMeta)
devtools::document()
library(BayesMeta)
help(print.bayesnmr)
print(fit)
help(rle)
x <- rev(rep(6:10, 1:5))
x
rle(x)$length
x <- data.frame(a = c(rep(1, 10), rep(2, 10)), b = c(1:8, 1:12))
x
x <- x[order(rnorm(20)),]
x
o <- order(x$a, x$b)
x[o,]
x <- data.frame(a = c(rep(1, 8), rep(2, 12)), b = c(1:8, 1:12))
x <- x[order(rnorm(20)),]
x
x[o,]
o <- order(x$a, x$b)
x[o,]
x$a[o]
load("C:/Users/dal18007/Desktop/Rpackages/meta_fit.RData")
load("C:/Users/dal18007/Desktop/Rpackages/t_model_data.RData")
dff <- df[[1]]
head(dff)
load("C:/Users/dal18007/Desktop/Rpackages/meta_fit.RData")
library(BayesMeta)
print(fit)
install.packages("RcppTN")
devtools::document()
library(BayesMeta)
data(df)
head(df)
groupInfo <- list(c(0,1), c(2,3), c(4)) # define the variance structure
x <- df[,6:10]
fit <- bayes.nmr(df$y, df$sd, x, df$ids, df$iarm, df$npt, groupInfo,
prior = list(c01=1.0e05, c02=4, nu=3),
mcmc=list(ndiscard=2500,nskip=1,nkeep=10000))
fit <- bayes.nmr(df$y, df$sd, x, df$ids, df$iarm, df$npt, groupInfo,
prior = list(c01=1.0e05, c02=4, nu=3),
mcmc=list(ndiscard=2500,nskip=1,nkeep=10000), verbose=TRUE)
df <- read.table("C:/Users/dal18007/Downloads/SMVMetaData30.txt", header=TRUE)
library(BayesMeta)
1000 + 5 * 350 + 2 * 500
1000 + 5 * 350 + 5 * 500 + 5 * 200 + 5 * 350 + 5 * 500
colnames(df) <- c("ir", "k", "i", "y1", "y2", "y3", "trt", "bmi", "age", "black")
head(df)
unique(df$ir)
head(df)
library(data.table)
install.packages("data.table")
library(data.table)
help(fread)
df <- fread("C:/Users/dal18007/Downloads/SMVMetaData30.txt", header=FALSE)
head(df)
colnames(df) <- c("ir", "k", "i", "y1", "y2", "y3", "trt", "bmi", "age", "black")
head(df)
help("bayes.mvmeta")
y <- cbind(df$y1, df$y2, df$y3)
X <- cbind(df$bmi, df$age, df$black)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(tidyverse)
df <- fread("C:/Users/dal18007/Downloads/SMVMetaData30.txt", header=FALSE)
df <- df %>% filter(ir <= 200)
df <- df %>% filter(ir <= 100)
head(df)
unique(df$ir)
y <- cbind(df$y1, df$y2, df$y3)
X <- cbind(df$bmi, df$age, df$black)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
df <- df %>% filter(ir <= 50)
colnames(df) <- c("ir", "k", "i", "y1", "y2", "y3", "trt", "bmi", "age", "black")
y <- cbind(df$y1, df$y2, df$y3)
X <- cbind(df$bmi, df$age, df$black)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
library(data.table)
library(tidyverse)
df <- fread("C:/Users/dal18007/Downloads/SMVMetaData30.txt", header=FALSE)
df <- df %>% filter(ir <= 50)
colnames(df) <- c("ir", "k", "i", "y1", "y2", "y3", "trt", "bmi", "age", "black")
y <- cbind(df$y1, df$y2, df$y3)
X <- cbind(df$bmi, df$age, df$black)
colnames(df) <- c("ir", "k", "i", "y1", "y2", "y3", "trt", "bmi", "age", "black")
df <- df %>% filter(ir <= 50)
y <- cbind(df$y1, df$y2, df$y3)
X <- cbind(df$bmi, df$age, df$black)
str(y)
str(X)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
o
head(Outcome)
o[1]
o[2]
as.double(c(1,2,3))
as.integer(c(1,2,3))
library(BayesMeta)
devtools::document()
library(BayesMeta)
library(BayesMeta)
library(BayesMeta)
library(BayesMeta)
library(data.table)
library(tidyverse)
df <- fread("C:/Users/dal18007/Downloads/SMVMetaData30.txt", header=FALSE)
colnames(df) <- c("ir", "k", "i", "y1", "y2", "y3", "trt", "bmi", "age", "black")
df <- df %>% filter(ir <= 50)
y <- cbind(df$y1, df$y2, df$y3)
X <- cbind(df$bmi, df$age, df$black)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
library(BayesMeta)
fit <- bayes.mvmeta(y, df$k, df$i, df$trt, X, 30, verbose=TRUE)
