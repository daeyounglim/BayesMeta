I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 0.5
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.9))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.9))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 8
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.9))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 8
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.9))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 2, 2)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 0.1, 0.1)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 0.1, 0.1)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 0.1, 0.1)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 3, 3)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 1.5, 1.5)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 3e6
I0 <- 2
S0 <- N - I0
T <- 60
R0 <- 3
susceptible <- numeric(T)
susceptible[1] <- S0
infectious <- numeric(T)
infectious[1] <- I0
re <- numeric(T-1)
ps <- numeric(T-1)
for (t in 2:T) {
re[t-1] <- exp(rnorm(1, 0, 0.4))
prob <- pexp(R0 * re[t-1] * (infectious[t-1] / N))
ps[t-1] <- prob
eta <- rgamma(1, 1.5, 1.5)
theta <- rbeta(1, eta / (1-prob), eta/prob)
infectious[t] <- rbinom(1, susceptible[t-1], theta)
susceptible[t] <- susceptible[t-1] - infectious[t]
}
infectious
N <- 50
d <- 3
T_len <- 92
X <- matrix(rnorm(N*d), N, d)
beta2_true <- rep(1, N)
beta4_true <- rep(1, N)
gam_true <- c(-1, -1.5, -2)
eta_true <- c(0.2, 0.5, 0.6)
TimeStamp <- seq(0, T_len, length.out = T_len)
sig2 <- 0.20
xg <- X %*% gam_true
xe <- X %*% eta_true
S <- function(t, beta1, beta2, beta3, beta4) {
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
exp(lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t))))
}
fxobs <- matrix(0, N, T_len)
for (i in 1:N) {
fxobs[i,] <- sapply(TimeStamp, function(t) S(t, exp(xg[i]), beta2_true[i], xe[i], beta4_true[i]))
}
cumcounts <- exp(log(fxobs) + matrix(rnorm(N*T_len, 0, sqrt(sig2)), N, T_len))
plot(TimeStamp, fxobs[1,], type = 'l')
N <- 50
d <- 3
T_len <- 92
X <- matrix(rnorm(N*d), N, d)
beta2_true <- rep(1, N)
beta4_true <- rep(1, N)
gam_true <- c(-3, -5.5, -7)
eta_true <- c(2, 5, 6)
TimeStamp <- seq(0, T_len, length.out = T_len)
sig2 <- 0.20
xg <- X %*% gam_true
xe <- X %*% eta_true
S <- function(t, beta1, beta2, beta3, beta4) {
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
exp(lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t))))
}
fxobs <- matrix(0, N, T_len)
for (i in 1:N) {
fxobs[i,] <- sapply(TimeStamp, function(t) S(t, exp(xg[i]), beta2_true[i], xe[i], beta4_true[i]))
}
cumcounts <- exp(log(fxobs) + matrix(rnorm(N*T_len, 0, sqrt(sig2)), N, T_len))
plot(TimeStamp, fxobs[1,], type = 'l')
plot(TimeStamp, fxobs[2,], type = 'l')
plot(TimeStamp, fxobs[3,], type = 'l')
xe
xe <- xe + abs(min(xe))
S <- function(t, beta1, beta2, beta3, beta4) {
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
exp(lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t))))
}
fxobs <- matrix(0, N, T_len)
for (i in 1:N) {
fxobs[i,] <- sapply(TimeStamp, function(t) S(t, exp(xg[i]), beta2_true[i], xe[i], beta4_true[i]))
}
cumcounts <- exp(log(fxobs) + matrix(rnorm(N*T_len, 0, sqrt(sig2)), N, T_len))
plot(TimeStamp, fxobs[1,], type = 'l')
plot(TimeStamp, fxobs[2,], type = 'l')
plot(TimeStamp, fxobs[3,], type = 'l')
plot(TimeStamp, fxobs[4,], type = 'l')
N <- 50
d <- 3
T_len <- 92
X <- matrix(rnorm(N*d), N, d)
beta2_true <- rep(0.5, N)
beta4_true <- rep(0.8, N)
gam_true <- c(-3, -5.5, -7)
eta_true <- c(2, 5, 6)
TimeStamp <- seq(0, T_len, length.out = T_len)
sig2 <- 0.1
xg <- X %*% gam_true
xe <- X %*% eta_true
xe <- xe + abs(min(xe))
S <- function(t, beta1, beta2, beta3, beta4) {
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
exp(lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t))))
}
fxobs <- matrix(0, N, T_len)
for (i in 1:N) {
fxobs[i,] <- sapply(TimeStamp, function(t) S(t, exp(xg[i]), beta2_true[i], xe[i], beta4_true[i]))
}
logS <- function(beta_par, logY) {
T_len <- length(logY)
t <- seq(0, T_len-1, by = 1)
beta1 <- beta_par[1]
beta2 <- exp(beta_par[2])
beta3 <- beta_par[3]
beta4 <- exp(beta_par[4])
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
sum((logY - (lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t)))))^2 / (2 * T_len))
}
optim(c(0.01, 0.01, 0.01, 0.01), function(b) logS(b, fxobs[7,]))
plot(fxobs[7,],type = 'l', lwd=2)
curve(S(x, 0.9998113, 4.2614358, -2.7519959, 0.8429719),type = 'l', lwd=2, col = "red", add=TRUE)
curve(S(x, 0.9998113, 4.2614358, -2.7519959, 0.8429719),type = 'l', lwd=2, col = "red")
plot(fxobs[7,],type = 'l', lwd=2)
curve(S(x, 0.9998113, 4.2614358, -2.7519959, 0.8429719),type = 'l', lwd=2, col = "red", add=TRUE)
plot(fxobs[6,], type = 'l', lwd = 2)
plot(fxobs[7,], type = 'l', lwd = 2)
plot(fxobs[1,], type = 'l', lwd = 2)
plot(fxobs[2,], type = 'l', lwd = 2)
optim(c(8, 0, 11, 0), function(b) logS(b, fxobs[2,]))
input <- c(8, 0, 11, 0)
fxest <- numeric(100)
for (i in 1:100) {
fxest[i] <- logS(input + (50 - i) * c(1, 0, 0, 0), fxobs[2,])
}
plot(fxest, type = 'l')
warnings()
logS <- function(beta_par, logY) {
T_len <- length(logY)
t <- seq(0, T_len-1, by = 1)
beta1 <- exp(beta_par[1])
beta2 <- exp(beta_par[2])
beta3 <- beta_par[3]
beta4 <- exp(beta_par[4])
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
sum((logY - (lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t)))))^2 / (2 * T_len))
}
optim(c(8, 0, 11, 0), function(b) logS(b, fxobs[2,]))
plot(fxobs[7,],type = 'l', lwd=2)
curve(S(x, c(10.0641057, -8.9418898, 26.3355715, -0.6792124)),type = 'l', lwd=2, col = "red")
curve(S(x, c(exp(10.0641057), -8.9418898, exp(26.3355715), -0.6792124)),type = 'l', lwd=2, col = "red")
curve(S(x, exp(10.0641057), -8.9418898, exp(26.3355715), -0.6792124),type = 'l', lwd=2, col = "red")
curve(S(x, 10.0641057, -8.9418898, 26.3355715, -0.6792124),type = 'l', lwd=2, col = "red")
plot(fxobs[7,],type = 'l', lwd=2)
plot(fxobs[7,],type = 'l', lwd=2)plot(fxobs[2,],type = 'l', lwd=2)
plot(fxobs[2,],type = 'l', lwd=2)
curve(S(x, 10.0641057, -8.9418898, 26.3355715, -0.6792124),type = 'l', lwd=2, col = "red")
plot(fxobs[2,],type = 'l', lwd=2)
optim(c(8, 0, 11, 0), function(b) logS(b, fxobs[2,]))
optim(c(8, 0, 11, 0), function(b) logS(b, log(fxobs[2,])))
plot(fxobs[2,],type = 'l', lwd=2)
curve(S(x, 2.2631171, -0.6817331, 15.7909181, -0.2037050),type = 'l', lwd=2, col = "red")
plot(fxobs[2,],type = 'l', lwd=2)
curve(S(x, 2.2631171, -0.6817331, 15.7909181, -0.2037050),type = 'l', lwd=2, col = "red", add=TRUE)
logS <- function(beta_par, logY) {
T_len <- length(logY)
t <- seq(0, T_len-1, by = 1)
beta1 <- exp(beta_par[1])
beta2 <- exp(beta_par[2])
beta3 <- exp(beta_par)[3]
beta4 <- exp(beta_par[4])
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
sum((logY - (lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t)))))^2 / (2 * T_len))
}
optim(c(8, 0, 11, 0), function(b) logS(b, log(fxobs[2,])))
logS <- function(beta_par, logY) {
T_len <- length(logY)
t <- seq(0, T_len-1, by = 1)
beta1 <- exp(beta_par[1])
beta2 <- exp(beta_par[2])
beta3 <- exp(beta_par[3])
beta4 <- exp(beta_par[4])
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
sum((logY - (lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t)))))^2 / (2 * T_len))
}
optim(c(8, 0, 11, 0), function(b) logS(b, log(fxobs[2,])))
logS <- function(beta_par, logY) {
T_len <- length(logY)
t <- seq(0, T_len-1, by = 1)
beta1 <- exp(beta_par[1])
beta2 <- exp(beta_par[2])
beta3 <- exp(beta_par[3])
beta4 <- exp(beta_par[4])
lb1 <- log(beta1)
C <- 2 * beta2 * beta4 / abs(beta2 + beta4)
f <- plogis(C * (beta3 - t), 0, 1)
sum((logY - (lb1 - log1p(f * exp(beta2 * (beta3 - t)) + (1 - f) * exp(beta4 * (beta3 - t)))))^2 / (2 * T_len))
}
optim(c(log(8), 0, log(11), 0), function(b) logS(b, log(fxobs[2,])))
plot(fxobs[2,],type = 'l', lwd=2)
curve(S(x, exp(2.2639514), exp(-0.6822209), exp(2.7599747), exp(-0.2120980)),type = 'l', lwd=2, col = "red", add=TRUE)
f <- function(x) {
exp(-(2 - exp(3 * x))^2)
}
integrate(f, lower = -Inf, upper = Inf)
f <- function(x) {
exp(-(2 - exp(-3 * x))^2)
}
integrate(f, lower = -Inf, upper = Inf)
f <- function(x) {
exp(-(2 - exp(3 * x))^2 - (x^2))
}
integrate(f, lower = -Inf, upper = Inf)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2 - (x^2))
}
integrate(f, lower = -Inf, upper = Inf)
curve(f, lower = -100, upper = 100)
curve(f, from = -10, to = 10)
warnings()
curve(f, from = -10, to = 10)
curve(f, from = -10f <- function(x) {
exp(-(2 - exp(-3 * x))^2)
}, to = 10)
f <- function(x) {
exp(-(2 - exp(-3 * x))^2)
}
curve(f, from = -10, to = 10)
curve(f, from = -5, to = 5)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2 - (x^2))
}
integrate(f, lower = -Inf, upper = Inf)
curve(f, from = -5, to = 5)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2 - (x^2/2000))
}
curve(f, from = -5, to = 5)
f <- function(x) {
exp(-(2 - exp(-5 * x))^2) / (1 + x^2)
}
curve(f, from = -5, to = 5)
install.packages("RcppTN")
install.packages("TruncatedNormal")
M <- matrix(rnorm(100*30), 100, 30)
princomp(M)
x <- princomp(M)
x
x <- prcomp(M)
x
setwd("G:/My Drive/UCONN/Rpackages/bayesmeta")
